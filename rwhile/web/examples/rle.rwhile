(* run-length encoding *)
read S;
  from  =? S' nil
  loop  cons C1 S <= S;
        from  =? N nil
        do    if =? S nil then
	        F ^= (nil.nil)
              else
                if =? C1 (hd S) else
                  F ^= (nil.nil)
		fi =? C1 (hd S)
	      fi =? S nil
        loop  cons C2 S <= S;
              C2 ^= C1;
              N <= cons nil N
        until F;
        F ^= (nil.nil);
        S' <= cons (cons C1 N) S'
  until =? S nil;
write S'
